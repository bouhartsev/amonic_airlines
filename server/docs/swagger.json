{
    "swagger": "2.0",
    "info": {
        "description": "Amonic Airlines fucking project. Go fuck yourself, logach(i).",
        "title": "Amonic Airlines REST API Documentation",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/api/auth/sign-in": {
            "post": {
                "description": "Возвращает JWT токен при успешной авторизации.\n\nCписок возможных кодов ошибок:\n* `invalid_credentials` - Неверный логин или пароль.\n* `user:disabled` - Пользователь заблокирован.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизирует пользователя.",
                "parameters": [
                    {
                        "description": "JSON input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Возвращает список пользователей.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Фильтрация по офису, к которому принадлежат пользователи",
                        "name": "officeId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает пользователя. При дубликате email возвращает ошибку с кодом `user.email:already_taken`.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Создает пользователя.",
                "parameters": [
                    {
                        "description": "JSON input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "description": "Если пользователь не найден, вернет ошибку с кодом `user:not_found`.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Возвращает информацию о пользователе.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errdomain.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateUserRequest": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "officeId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.SignInRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "officeId": {
                    "type": "integer"
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "errdomain.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}