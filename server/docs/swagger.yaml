basePath: /api
definitions:
  domain.AddReviewRequest:
    properties:
      age:
        type: integer
      answers:
        $ref: '#/definitions/domain.Answers'
      cabinTypeId:
        type: integer
      from:
        type: string
      gender:
        type: integer
      to:
        type: string
    type: object
  domain.AddTicketRequest:
    properties:
      outbound:
        $ref: '#/definitions/domain.TicketInfo'
      passenger:
        properties:
          birthdate:
            type: string
          firstname:
            type: string
          lastname:
            type: string
          passportCountryId:
            type: integer
          passportNumber:
            type: string
          phone:
            type: string
        type: object
      return:
        $ref: '#/definitions/domain.TicketInfo'
    type: object
  domain.Airport:
    properties:
      IATACode:
        type: string
      countryId:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  domain.Answers:
    properties:
      q1:
        type: integer
      q2:
        type: integer
      q3:
        type: integer
      q4:
        type: integer
      q5:
        type: integer
      q6:
        type: integer
      q7:
        type: integer
    type: object
  domain.CabinType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  domain.Country:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  domain.CreateUserRequest:
    properties:
      birthdate:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      officeId:
        type: integer
      password:
        type: string
    type: object
  domain.GetAirportsResponse:
    properties:
      airports:
        items:
          $ref: '#/definitions/domain.Airport'
        type: array
    type: object
  domain.GetBriefReviewsResponse:
    properties:
      age:
        properties:
          18-24:
            type: integer
          25-39:
            type: integer
          40-59:
            type: integer
          "60":
            type: integer
        type: object
      cabinType:
        properties:
          business:
            type: integer
          economy:
            type: integer
          first:
            type: integer
        type: object
      destinationAirport:
        properties:
          AUH:
            type: integer
          BAH:
            type: integer
          CAI:
            type: integer
          DOH:
            type: integer
          RYU:
            type: integer
        type: object
      gender:
        properties:
          female:
            type: integer
          male:
            type: integer
        type: object
      total:
        type: integer
    type: object
  domain.GetCabinTypesResponse:
    properties:
      cabinTypes:
        items:
          $ref: '#/definitions/domain.CabinType'
        type: array
    type: object
  domain.GetCountriesResponse:
    properties:
      countries:
        items:
          $ref: '#/definitions/domain.Country'
        type: array
    type: object
  domain.GetSchedulesResponse:
    properties:
      schedules:
        items:
          $ref: '#/definitions/domain.Schedule'
        type: array
    type: object
  domain.Schedule:
    properties:
      aircraft:
        type: string
      businessPrice:
        type: number
      confirmed:
        type: boolean
      date:
        type: string
      economyPrice:
        type: number
      firstClassPrice:
        type: number
      flightNumber:
        type: integer
      from:
        type: string
      id:
        type: integer
      time:
        type: string
      to:
        type: string
    type: object
  domain.SignInRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  domain.SignInResponse:
    properties:
      token:
        type: string
    type: object
  domain.TicketInfo:
    properties:
      cabinTypeId:
        type: integer
      scheduleId:
        type: integer
    type: object
  domain.UpdateScheduleRequest:
    properties:
      date:
        type: string
      economyPrice:
        type: string
      time:
        type: string
    type: object
  domain.UpdateUserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      officeId:
        type: integer
      roleId:
        type: integer
    type: object
  domain.User:
    properties:
      active:
        type: boolean
      age:
        type: integer
      birthdate:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      officeId:
        type: integer
      roleId:
        type: integer
    type: object
  errdomain.ErrorResponse:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
  description: Amonic Airlines fucking project. Go fuck yourself, logach(i).
  title: Amonic Airlines REST API Documentation
  version: "1.0"
paths:
  /api/airports:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetAirportsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает список аэропортов.
      tags:
      - Airports
  /api/auth/sign-in:
    post:
      consumes:
      - application/json
      description: |-
        Возвращает JWT токен при успешной авторизации.

        Cписок возможных кодов ошибок:
        * `invalid_credentials` - Неверный логин или пароль.
        * `user:disabled` - Пользователь заблокирован.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SignInResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Авторизирует пользователя.
      tags:
      - Auth
  /api/cabin-types:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetCabinTypesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает список типов cabins.
      tags:
      - CabinTypes
  /api/countries:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetCountriesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает список стран.
      tags:
      - Countries
  /api/reviews:
    post:
      consumes:
      - application/json
      description: У поля `gender` 0 - Male, 1 - Female.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AddReviewRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Добавляет отзыв.
      tags:
      - Reviews
  /api/reviews/brief:
    get:
      consumes:
      - application/json
      description: Поля `to` и `from` в query обязательны.
      parameters:
      - description: Дата, представленная начальной границей выборки
        in: query
        name: to
        required: true
        type: string
      - description: Дата, представленная конечной границей выборки
        in: query
        name: from
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetBriefReviewsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает суммарный отчет.
      tags:
      - Reviews
  /api/schedules:
    get:
      consumes:
      - application/json
      parameters:
      - description: Имя аэропорта, в который идет отправление
        in: query
        name: from
        type: string
      - description: Имя аэропорта, из коготорого идет отправление
        in: query
        name: to
        type: string
      - description: 'Сортировка. Возможные значения: `datetime`, `price`, `confirmed`,
          `unconfirmed`. По умолчанию `datetime`.'
        in: query
        name: sort_by
        type: string
      - description: Фильтр по дате вылета
        in: query
        name: outbound
        type: string
      - description: Фильтр по номету полета
        in: query
        name: flightNumber
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetSchedulesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает список расписаний полетов(schedules).
      tags:
      - Schedules
  /api/schedules/{schedule_id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор расписания
        in: path
        name: schedule_id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Обновляет расписание.
      tags:
      - Schedules
  /api/schedules/{schedule_id}/confirm:
    post:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор расписания
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Помечает расписание как подтвержденное.
      tags:
      - Schedules
  /api/schedules/{schedule_id}/unconfirm:
    post:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор расписания
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Помечает расписание как НЕподтвержденное.
      tags:
      - Schedules
  /api/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Фильтрация по офису, к которому принадлежат пользователи
        in: query
        name: officeId
        type: integer
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает список пользователей.
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Создает пользователя. При дубликате email возвращает ошибку с кодом
        `user.email:already_taken`.
      parameters:
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Создает пользователя.
      tags:
      - Users
  /api/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Если пользователь не найден, вернет ошибку с кодом `user:not_found`.
      parameters:
      - description: Идентификатор пользователя
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает информацию о пользователе.
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Если пользователь не найден, вернет ошибку с кодом `user:not_found`.
      parameters:
      - description: Идентификатор пользователя
        in: path
        name: user_id
        required: true
        type: integer
      - description: JSON input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errdomain.ErrorResponse'
      summary: Возвращает информацию о пользователе.
      tags:
      - Users
swagger: "2.0"
